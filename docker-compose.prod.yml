version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cattle_db}
      POSTGRES_USER: ${POSTGRES_USER:-cattle_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-cattle_user} -d ${POSTGRES_DB:-cattle_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      target: production
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-cattle_user}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-cattle_db}
      SECRET_KEY: ${SECRET_KEY}
      USE_MOCKS: "false"
    ports:
      - "8000:8000"
    volumes:
      - ./ml/models:/app/ml/models:ro
      - ./data:/app/data:ro
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
